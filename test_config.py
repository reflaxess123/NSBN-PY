#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –º–∏–≥—Ä–∞—Ü–∏–π
"""
import os
import sys

def test_config():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        required_vars = {
            'DATABASE_URL': 'postgresql://test:test@localhost:5432/test',
            'REDIS_URL': 'redis://localhost:6379/0',
            'SECRET_KEY': 'test-secret-key'
        }
        
        for key, default_value in required_vars.items():
            if key not in os.environ:
                print(f"‚ö†Ô∏è  {key} not found in environment, using default for testing")
                os.environ[key] = default_value
        
        # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        from app.config import settings
        
        print("‚úÖ Configuration loaded successfully!")
        print(f"üìä Database URL: {settings.database_url}")
        print(f"üìä Redis URL: {settings.redis_url}")
        print(f"üìä Debug mode: {settings.debug}")
        print(f"üìä Allowed origins string: {settings.allowed_origins_str}")
        print(f"üìä Parsed allowed origins: {settings.allowed_origins}")
        print(f"üìä Port: {settings.port}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Configuration error: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_config()
    sys.exit(0 if success else 1) 